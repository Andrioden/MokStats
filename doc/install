GUIDES (SOURCE)
----------------
Guide 1 and 2 are loosely followed. Guide 3 and 4 are almost fully followed. 5 are modified and used.

1. http://chenliangblog.wordpress.com/2011/01/02/some-pointers-on-setting-up-a-basic-django-project-under-ubuntu-10-04-1/
2. http://www.lennu.net/2012/05/14/django-deployement-installation-to-ubuntu-12-dot-04-server/
3. http://blog.iiilx.com/programming/how-to-install-postgres-on-ubuntu-for-django/
4. http://lassebunk.dk/2011/03/16/linux-dropbox-remote-backup/
5. http://lassebunk.dk/2011/03/11/linux-backup-script/


RUN IN SHELL - anywhere
----------------
apt-get update
apt-get upgrade
apt-get install apache2 python python-django libapache2-mod-wsgi pip postgresql python-psycopg2
pip install django, django_compress

RUN IN SHELL - at install location
------------------------------------------------
Uncertain about exact shit to be done, but git clone, and folder creation has to be done:
- projectdir/static
- projectdir/static/CACHE
- projectdir/static/CACHE/css
- projectdir/static/CACHE/js
- some (not js/css) cache folder anywhere.
- Both cache folders, 777
- Create config file

Apache 2 virtual host file (/etc/apache2/sites-enabled)
------------------------------------------------
<VirtualHost *:20000>

        WSGIScriptAlias /mokstats/ /srv/djangoapps/mokstatsapp/mokstats/wsgi.py

        <Directory /srv/djangoapps/mokstatsapp/mokstats>
                <Files wsgi.py>
                Order deny,allow
                Allow from all
                </Files>
        </Directory>

        Alias /mokstats/static/ /srv/djangoapps/mokstatsapp/static/

        <Directory /srv/djangoapps/mokstats/mokstatsapp/static>
        Order deny,allow
        Allow from all
        </Directory>

</VirtualHost>



Wsgi.py
---------------
import sys, os

sys.path.insert(0,os.sep.join(os.path.abspath(__file__).split(os.sep)[:-2]))


os.environ['DJANGO_SETTINGS_MODULE'] = 'mokstats.settings'

import django.core.handlers.wsgi
application = django.core.handlers.wsgi.WSGIHandler()




Legend:
"command" = Command to run in linux window
[something] = Needs to be replaced by input, brackets included.
{PDIR} = Directory where the project is placed

0. Update all existing packages (not needed)
	"sudo apt-get update"
	"sudo apt-get upgrade"

1. Install project packages
	"sudo apt-get install apache2 python python-django libapache2-mod-wsgi python-pip postgresql python-psycopg2 git"
	"sudo pip install django==1.5.1, django_compressor"
X. Download project from GitHub
	X.1. GitHub Profile SSH Key: https://help.github.com/articles/generating-ssh-keys
	X.2. cd to django apps parent folder
	X.3 "git clone git@github.com:Andrioden/MokStats.git"

Y. Setup Django Project
	Y.1. Settings
		"cp {PDIR}/mokstats/settings_example.py {PDIR}/mokstats/settings.py"
		Edit part 1 of settings.py "nano {PDIR}/mokstats/settings.py"
		Create cache directory "mkdir -m 777 /tmp/[dir]"
	Y.2. WSGI
		"cp {PDIR}/mokstats/wsgi_example.py {PDIR}/mokstats/wsgi.py"
	Y.3. Cache directories
		"mkdir {PDIR}/static"
		"mkdir -m 777 {PDIR}/static/CACHE"
		"mkdir -m 777 {PDIR}/static/CACHE/css"
		"mkdir -m 777 {PDIR}/static/CACHE/js"
	Y.4. Static Content
		"python {PDIR}/manage.py collectstatic"

X. Setup PostgreSQL
	2.1. Change postgres password: "sudo passwd postgres"
	2.2. Create project database user: "sudo -u postgres createuser -P [dbuser]", No Superuser, No database creation, No role creation
	2.3. Create database
		"su postgres"
		"psql template1"
		"CREATE DATABASE [dbname] OWNER [dbuser] ENCODING 'UTF8'; "
		"\q"
		"/etc/init.d/postgresql restart"
	2.4. Update {PDIR}/mokstats/settings.py with database setttings.

B. Setup Dropbox Backup
	B.1. Install dropbox, https://www.dropbox.com/install?os=lnx

R. Restore database from backup
	R.1. Get dump file
	R.2. "pg_restore -d mokstatsdb --role=mokstats [dumpfile]"

A. Setup Apache 2
	A.1. "touch /etc/apache2/sites-enabled/mokstats"
	A.2. Copy content of {PDIR}/doc/apache-site-file to created file.
	A.3. Edit content to fit newly created project.
	Maybe: "hostname [hostname]"
	A.X. Enable wsgi mod: "a2enmod wsgi"
	A.X. Add used port to /etc/apache2/ports.conf
	A.X. "service apache2 restart"
	